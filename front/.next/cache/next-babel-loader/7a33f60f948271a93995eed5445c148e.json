{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: \"우승\"\n    },\n    content: \"첫 번째 게시글\",\n    img: \"\"\n  }],\n  imagePath\n};\nexport const ADD_POST = \"ADD_POST\";\nexport const ADD_DUMMY = \"ADD_DUMMY\";\nexport const addPost = {\n  type: ADD_POST\n};\nexport const addDummy = {\n  type: ADD_POST,\n  data: {\n    content: \"hello\",\n    userId: 1,\n    User: {\n      nickname: \"우승\"\n    }\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_POST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: [action.data, ...state.mainPosts]\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/nodebirds/front/reducers/post.js"],"names":["initialState","mainPosts","User","id","nickname","content","img","imagePath","ADD_POST","ADD_DUMMY","addPost","type","addDummy","data","userId","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,CAAC;AACVC,IAAAA,IAAI,EAAE;AACJC,MAAAA,EAAE,EAAE,CADA;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KADI;AAKVC,IAAAA,OAAO,EAAE,UALC;AAMVC,IAAAA,GAAG,EAAE;AANK,GAAD,CADe;AAS1BC,EAAAA;AAT0B,CAArB;AAYP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AAEP,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,IAAI,EAAEH;AADe,CAAhB;AAIP,OAAO,MAAMI,QAAQ,GAAG;AACtBD,EAAAA,IAAI,EAAEH,QADgB;AAEtBK,EAAAA,IAAI,EAAE;AACJR,IAAAA,OAAO,EAAE,OADL;AAEJS,IAAAA,MAAM,EAAE,CAFJ;AAGJZ,IAAAA,IAAI,EAAE;AACJE,MAAAA,QAAQ,EAAE;AADN;AAHF;AAFgB,CAAjB;;AAWP,MAAMW,OAAO,GAAG,CAACC,KAAK,GAAGhB,YAAT,EAAuBiB,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACN,IAAf;AACE,SAAKH,QAAL;AAAe;AACb,iCACKQ,KADL;AAGD;;AACD,SAAKR,QAAL;AAAe;AACb,iCACKQ,KADL;AAEEf,UAAAA,SAAS,EAAE,CAACgB,MAAM,CAACJ,IAAR,EAAc,GAAGG,KAAK,CAACf,SAAvB;AAFb;AAID;;AACD;AAAQ;AACN,iCACKe,KADL;AAGD;AAhBH;AAkBD,CAnBD;;AAqBA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  mainPosts: [{\r\n    User: {\r\n      id: 1,\r\n      nickname: \"우승\",\r\n    },\r\n    content: \"첫 번째 게시글\",\r\n    img: \"\",\r\n  }],\r\n  imagePath\r\n};\r\n\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const ADD_DUMMY = \"ADD_DUMMY\";\r\n\r\nexport const addPost = {\r\n  type: ADD_POST,\r\n};\r\n\r\nexport const addDummy = {\r\n  type: ADD_POST,\r\n  data: {\r\n    content: \"hello\",\r\n    userId: 1,\r\n    User: {\r\n      nickname: \"우승\",\r\n    },\r\n  },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ADD_POST: {\r\n      return {\r\n        ...state,\r\n        mainPosts: [action.data, ...state.mainPosts],\r\n      };\r\n    }\r\n    default:{\r\n      return{\r\n        ...state,\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}