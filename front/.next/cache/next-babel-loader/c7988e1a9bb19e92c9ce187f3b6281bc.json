{"ast":null,"code":"var _jsxFileName = \"D:\\\\nodebirds\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    imagePaths,\n    isAddingPost,\n    postAdded\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (postAdded) {\n      setText('');\n    }\n  }, [postAdded]);\n  const onSubmitForm = useCallback(e => {\n    e.preventDefault();\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text\n      }\n    });\n  }, []);\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    value: text,\n    onChange: onChangeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: `http://localhost:3065/${v}`,\n    style: {\n      width: '200px'\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["D:/nodebirds/front/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","Form","Input","Button","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","dispatch","text","setText","imagePaths","isAddingPost","postAdded","state","post","onSubmitForm","e","preventDefault","type","data","onChangeText","target","value","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [text, setText] = useState('');\r\n  const { imagePaths, isAddingPost, postAdded } = useSelector(\r\n    (state) => state.post\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (postAdded) {\r\n      setText('');\r\n    }\r\n  }, [postAdded]);\r\n\r\n  const onSubmitForm = useCallback((e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: {\r\n        text,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const onChangeText = useCallback((e) => {\r\n    setText(e.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      style={{ margin: '10px 0 20px' }}\r\n      encType=\"multipart/form-data\"\r\n      onSubmit={onSubmitForm}\r\n    >\r\n      <Input.TextArea\r\n        maxLength={140}\r\n        placeholder=\"어떤 신기한 일이 있었나요?\"\r\n        value={text}\r\n        onChange={onChangeText}\r\n      />\r\n      <div>\r\n        <input type=\"file\" multiple hidden />\r\n        <Button>이미지 업로드</Button>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ float: 'right' }}\r\n          htmlType=\"submit\"\r\n          loading={isAddingPost}\r\n        >\r\n          짹짹\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((v) => (\r\n          <div key={v} style={{ display: 'inline-block' }}>\r\n            <img\r\n              src={`http://localhost:3065/${v}`}\r\n              style={{ width: '200px' }}\r\n              alt={v}\r\n            />\r\n            <div>\r\n              <Button>제거</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}