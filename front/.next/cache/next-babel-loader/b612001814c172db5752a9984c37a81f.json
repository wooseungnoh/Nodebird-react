{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: \"우승\"\n    },\n    content: \"첫 번째 게시글\",\n    img: \"\"\n  }],\n  imagePaths: []\n};\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const addPost = {\n  type: ADD_POST\n};\nexport const addDummy = {\n  type: ADD_POST,\n  data: {\n    content: \"hello\",\n    userId: 1,\n    User: {\n      nickname: \"우승\"\n    }\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_POST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: [action.data, ...state.mainPosts]\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/nodebirds/front/reducers/post.js"],"names":["initialState","mainPosts","User","id","nickname","content","img","imagePaths","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","addPost","type","ADD_POST","addDummy","data","userId","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,IAAI,EAAE;AACJC,MAAAA,EAAE,EAAE,CADA;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KADR;AAKEC,IAAAA,OAAO,EAAE,UALX;AAMEC,IAAAA,GAAG,EAAE;AANP,GADS,CADe;AAW1BC,EAAAA,UAAU,EAAE;AAXc,CAArB;AAcP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,IAAI,EAAEC;AADe,CAAhB;AAIP,OAAO,MAAMC,QAAQ,GAAG;AACtBF,EAAAA,IAAI,EAAEC,QADgB;AAEtBE,EAAAA,IAAI,EAAE;AACJV,IAAAA,OAAO,EAAE,OADL;AAEJW,IAAAA,MAAM,EAAE,CAFJ;AAGJd,IAAAA,IAAI,EAAE;AACJE,MAAAA,QAAQ,EAAE;AADN;AAHF;AAFgB,CAAjB;;AAWP,MAAMa,OAAO,GAAG,CAACC,KAAK,GAAGlB,YAAT,EAAuBmB,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKC,QAAL;AAAe;AACb,iCACKK,KADL;AAGD;;AACD,SAAKL,QAAL;AAAe;AACb,iCACKK,KADL;AAEEjB,UAAAA,SAAS,EAAE,CAACkB,MAAM,CAACJ,IAAR,EAAc,GAAGG,KAAK,CAACjB,SAAvB;AAFb;AAID;;AACD;AAAS;AACP,iCACKiB,KADL;AAGD;AAhBH;AAkBD,CAnBD;;AAqBA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  mainPosts: [\r\n    {\r\n      User: {\r\n        id: 1,\r\n        nickname: \"우승\",\r\n      },\r\n      content: \"첫 번째 게시글\",\r\n      img: \"\",\r\n    },\r\n  ],\r\n  imagePaths: [],\r\n};\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const addPost = {\r\n  type: ADD_POST,\r\n};\r\n\r\nexport const addDummy = {\r\n  type: ADD_POST,\r\n  data: {\r\n    content: \"hello\",\r\n    userId: 1,\r\n    User: {\r\n      nickname: \"우승\",\r\n    },\r\n  },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ADD_POST: {\r\n      return {\r\n        ...state,\r\n        mainPosts: [action.data, ...state.mainPosts],\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}