{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst dummyUser = {\n  nickname: '노우승',\n  Post: [],\n  Followings: [],\n  Followers: [],\n  signUpDatea: []\n}; //store\n\nexport const initialState = {\n  isLoggedIn: false,\n  // 로그인 여부\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  // 로그인 시도중\n  logInErrorReason: '',\n  // 로그인 실패사유\n  signedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: '',\n  // 회원가입 실패사유\n  me: null,\n  // 내 정보\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null // 남의 정보\n\n}; // 초기 state\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n\nexport const signUpAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\nexport const loginAction = {\n  type: LOG_IN_REQUEST,\n  data: {\n    nickname: 'wooseung'\n  }\n}; // 실제 액션\n\nexport const logoutAction = {\n  type: LOG_OUT_REQUEST\n};\nexport const signUp = data => ({\n  type: SIGN_UP_REQUEST,\n  data\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          me: dummyUser,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          signUpDatea: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n}; // action 의 결과 인 reducer\n\n\nexport default reducer;","map":{"version":3,"sources":["D:/nodebirds/front/reducers/user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","signUpDatea","initialState","isLoggedIn","isLoggingOut","isLoggingIn","logInErrorReason","signedUp","isSigningUp","signUpErrorReason","me","followingList","followerList","userInfo","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","signUpAction","data","type","loginAction","logoutAction","signUp","reducer","state","action","isLoading","user"],"mappings":";;;;;;AAAA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,KADM;AAEhBC,EAAAA,IAAI,EAAE,EAFU;AAGhBC,EAAAA,UAAU,EAAE,EAHI;AAIhBC,EAAAA,SAAS,EAAE,EAJK;AAKhBC,EAAAA,WAAW,EAAE;AALG,CAAlB,C,CAQA;;AACA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,KADc;AACP;AACnBC,EAAAA,YAAY,EAAE,KAFY;AAEL;AACrBC,EAAAA,WAAW,EAAE,KAHa;AAGN;AACpBC,EAAAA,gBAAgB,EAAE,EAJQ;AAIJ;AACtBC,EAAAA,QAAQ,EAAE,KALgB;AAKT;AACjBC,EAAAA,WAAW,EAAE,KANa;AAMN;AACpBC,EAAAA,iBAAiB,EAAE,EAPO;AAOH;AACvBC,EAAAA,EAAE,EAAE,IARsB;AAQhB;AACVC,EAAAA,aAAa,EAAE,EATW;AASN;AACpBC,EAAAA,YAAY,EAAE,EAVY;AAUR;AAClBC,EAAAA,QAAQ,EAAE,IAXgB,CAWV;;AAXU,CAArB,C,CAYJ;;AAEH,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB,C,CAA2C;;AAElD,OAAO,MAAMC,YAAY,GAAIC,IAAD,KAAW;AACrCC,EAAAA,IAAI,EAAER,cAD+B;AAErCO,EAAAA;AAFqC,CAAX,CAArB;AAKP,OAAO,MAAME,WAAW,GAAG;AACzBD,EAAAA,IAAI,EAAER,cADmB;AAEzBO,EAAAA,IAAI,EAAE;AACJ3B,IAAAA,QAAQ,EAAE;AADN;AAFmB,CAApB,C,CAKJ;;AAEH,OAAO,MAAM8B,YAAY,GAAG;AAC1BF,EAAAA,IAAI,EAAEL;AADoB,CAArB;AAIP,OAAO,MAAMQ,MAAM,GAAIJ,IAAD,KAAW;AAC/BC,EAAAA,IAAI,EAAEX,eADyB;AAE/BU,EAAAA;AAF+B,CAAX,CAAf;;AAKP,MAAMK,OAAO,GAAG,CAACC,KAAK,GAAG5B,YAAT,EAAuB6B,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACN,IAAf;AACE,SAAKR,cAAL;AAAqB;AACnB,iCACKa,KADL;AAEE3B,UAAAA,UAAU,EAAE;AAFd;AAID;;AACD,SAAKe,cAAL;AAAqB;AACnB,iCACKY,KADL;AAEE3B,UAAAA,UAAU,EAAE,IAFd;AAGEO,UAAAA,EAAE,EAAEd,SAHN;AAIEoC,UAAAA,SAAS,EAAE;AAJb;AAMD;;AACD,SAAKb,cAAL;AAAqB;AACnB,iCACKW,KADL;AAEE3B,UAAAA,UAAU,EAAE,KAFd;AAGEO,UAAAA,EAAE,EAAE;AAHN;AAKD;;AACD,SAAKU,eAAL;AAAsB;AACpB,iCACKU,KADL;AAEE3B,UAAAA,UAAU,EAAE,KAFd;AAGE8B,UAAAA,IAAI,EAAE;AAHR;AAKD;;AACD,SAAKnB,eAAL;AAAsB;AACpB,iCACKgB,KADL;AAEE7B,UAAAA,WAAW,EAAE8B,MAAM,CAACP;AAFtB;AAID;;AACD;AAAS;AACP,iCACKM,KADL;AAGD;AAvCH;AAyCD,CA1CD,C,CA0CG;;;AAEH,eAAeD,OAAf","sourcesContent":["const dummyUser = {\r\n  nickname: '노우승',\r\n  Post: [],\r\n  Followings: [],\r\n  Followers: [],\r\n  signUpDatea: [],\r\n};\r\n\r\n//store\r\nexport const initialState = {\r\n  isLoggedIn: false, // 로그인 여부\r\n  isLoggingOut: false, // 로그아웃 시도중\r\n  isLoggingIn: false, // 로그인 시도중\r\n  logInErrorReason: '', // 로그인 실패사유\r\n  signedUp: false, // 회원가입 성공\r\n  isSigningUp: false, // 회원가입 시도중\r\n  signUpErrorReason: '', // 회원가입 실패사유\r\n  me: null, // 내 정보\r\n  followingList: [],  // 팔로잉 리스트\r\n  followerList: [], // 팔로워 리스트\r\n  userInfo: null, // 남의 정보\r\n}; // 초기 state\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\r\n\r\nexport const signUpAction = (data) => ({\r\n  type: LOG_IN_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const loginAction = {\r\n  type: LOG_IN_REQUEST,\r\n  data: {\r\n    nickname: 'wooseung',\r\n  },\r\n}; // 실제 액션\r\n\r\nexport const logoutAction = {\r\n  type: LOG_OUT_REQUEST,\r\n};\r\n\r\nexport const signUp = (data) => ({\r\n  type: SIGN_UP_REQUEST,\r\n  data,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n      };\r\n    }\r\n    case LOG_IN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        me: dummyUser,\r\n        isLoading: false,\r\n      };\r\n    }\r\n    case LOG_IN_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        me: null,\r\n      };\r\n    }\r\n    case LOG_OUT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    }\r\n    case SIGN_UP_REQUEST: {\r\n      return {\r\n        ...state,\r\n        signUpDatea: action.data,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n}; // action 의 결과 인 reducer\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}