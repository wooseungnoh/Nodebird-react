{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/PostCard.js","webpack:///./components/PostForm.js","webpack:///./pages/index.js","webpack:///./reducers/post.js","webpack:///external \"antd\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-redux\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { Card, Icon, Button, Avatar, Form, Input, List, Comment } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst PostCard = ({ post }) => {\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const [commentText, setCommentText] = useState('');\r\n  const { me } = useSelector((state) => state.user);\r\n  const { commentAdded, isAddingComment } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  const onSubmitComment = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!me) {\r\n        return alert('로그인이 필요합니다.');\r\n      }\r\n      return dispatch({\r\n        type: ADD_COMMENT_REQUEST,\r\n        data: {\r\n          postId: post.id,\r\n        },\r\n      });\r\n    },\r\n    [me && me.id]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setCommentText('');\r\n  }, [commentAdded === true]);\r\n\r\n  const onChangeCommentText = useCallback((e) => {\r\n    setCommentText(e.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        key={+post.createdAt}\r\n        cover={post.img && <img alt=\"example\" src={post.img} />}\r\n        actions={[\r\n          <Icon type=\"retweet\" key=\"retweet\" />,\r\n          <Icon type=\"heart\" key=\"heart\" />,\r\n          <Icon type=\"message\" key=\"message\" onClick={onToggleComment} />,\r\n          <Icon type=\"ellipsis\" key=\"ellipsis\" />,\r\n        ]}\r\n        extra={<Button>팔로우</Button>}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={post.content}\r\n        />\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <>\r\n          <Form onSubmit={onSubmitComment}>\r\n            <Form.Item>\r\n              <Input.TextArea\r\n                rows={4}\r\n                value={commentText}\r\n                onChange={onChangeCommentText}\r\n              />\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={isAddingComment}>\r\n              삐약\r\n            </Button>\r\n          </Form>\r\n          <List\r\n            header={`${post.Comments ? post.Comments.length : 0} 댓글`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments || []}\r\n            renderItem={(item) => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    img: PropTypes.string,\r\n    createdAt: PropTypes.object,\r\n  }),\r\n};\r\n\r\nexport default PostCard;\r\n","import React, { useCallback, useState, useEffect } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [text, setText] = useState('');\r\n  const { imagePaths, isAddingPost, postAdded } = useSelector(\r\n    (state) => state.post\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (postAdded) {\r\n      setText('');\r\n    }\r\n  }, [postAdded]);\r\n\r\n  const onSubmitForm = useCallback((e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: {\r\n        text,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const onChangeText = useCallback((e) => {\r\n    setText(e.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      style={{ margin: '10px 0 20px' }}\r\n      encType=\"multipart/form-data\"\r\n      onSubmit={onSubmitForm}\r\n    >\r\n      <Input.TextArea\r\n        maxLength={140}\r\n        placeholder=\"어떤 신기한 일이 있었나요?\"\r\n        value={text}\r\n        onChange={onChangeText}\r\n      />\r\n      <div>\r\n        <input type=\"file\" multiple hidden />\r\n        <Button>이미지 업로드</Button>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ float: 'right' }}\r\n          htmlType=\"submit\"\r\n          loading={isAddingPost}\r\n        >\r\n          짹짹\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((v) => (\r\n          <div key={v} style={{ display: 'inline-block' }}>\r\n            <img\r\n              src={`http://localhost:3065/${v}`}\r\n              style={{ width: '200px' }}\r\n              alt={v}\r\n            />\r\n            <div>\r\n              <Button>제거</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\n\r\nconst Home = () => {\r\n  const { isLoggedIn } = useSelector(state => state.user);\r\n  const { mainPosts } = useSelector(state => state.post);\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn && <PostForm />}\r\n      {mainPosts.map((c) => {\r\n        return (\r\n          <PostCard key={c} post={c} />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","export const initialState = {\r\n  mainPosts: [{\r\n    id: 1,\r\n    User: {\r\n      id: 1,\r\n      nickname: '우승',\r\n    },\r\n    content: '첫 번째 게시글',\r\n    img: '',\r\n    Comments: [],\r\n  }], // 화면에 보일 포스트들\r\n  imagePaths: [], // 미리보기 이미지 경로\r\n  addPostErrorReason: '', // 포스트 업로드 실패 사유\r\n  isAddingPost: false, // 포스트 업로드 중\r\n  postAdded: false, // 포스트 업로드 성공\r\n  isAddingComment: false,\r\n  addCommentErrorReason: '',\r\n  commentAdded: false,\r\n};\r\n\r\nconst dummyPost = {\r\n  id: 2,\r\n  User: {\r\n    id: 1,\r\n    nickname: '우승',\r\n  },\r\n  content: '나는 더미입니다.',\r\n  Comments: [],\r\n};\r\n\r\nconst dummyComment = {\r\n  id: 1,\r\n  User: {\r\n    id: 1,\r\n    nickname: '우승',\r\n  },\r\n  createdAt: new Date(),\r\n  content: '더미 댓글입니다.',\r\n};\r\n\r\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\r\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\r\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\r\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\r\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isAddingPost: true,\r\n        addPostErrorReason: '',\r\n        postAdded: false,\r\n      };\r\n    }\r\n    case ADD_POST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isAddingPost: false,\r\n        mainPosts: [dummyPost, ...state.mainPosts],\r\n        postAdded: true,\r\n      };\r\n    }\r\n    case ADD_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isAddingPost: false,\r\n        addPostErrorReason: action.error,\r\n      };\r\n    }\r\n    case ADD_COMMENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isAddingComment: true,\r\n        addCommentErrorReason: '',\r\n        commentAdded: false,\r\n      };\r\n    }\r\n    case ADD_COMMENT_SUCCESS: {\r\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n      const post = state.mainPosts[postIndex];\r\n      const Comments = [...post.Comments, dummyComment];\r\n      const mainPosts = [...state.mainPosts];\r\n      mainPosts[postIndex] = { ...post, Comments };\r\n      return {\r\n        ...state,\r\n        isAddingComment: false,\r\n        mainPosts,\r\n        commentAdded: true,\r\n      };\r\n    }\r\n    case ADD_COMMENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isAddingComment: false,\r\n        addCommentErrorReason: action.error,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};","module.exports = require(\"antd\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC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","sourceRoot":""}